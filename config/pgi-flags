#							-*- shell-script -*-
#
# Copyright by The HDF Group.
# Copyright by the Board of Trustees of the University of Illinois.
# All rights reserved.
#
# This file is part of HDF5.  The full HDF5 copyright notice, including
# terms governing use, modification, and redistribution, is contained in
# the COPYING file, which can be found at the root of the source code
# distribution tree, or in https://www.hdfgroup.org/licenses.
# If you do not have access to either file, you may request a copy from
# help@hdfgroup.org.


# This file should be sourced into configure if the compiler is the
# PGI pgcc compiler or a derivative.  It is careful not to do anything
# if the compiler is not PGI; otherwise `cc_flags_set' is set to `yes'
#

# Get the compiler version in a way that works for pgcc
# pgcc unless a compiler version is already known
#
#   cc_vendor:    The compiler name: pgcc
#   cc_version:   Version number: 5.0-2, 5.2-2
#
if test X = "X$cc_flags_set"; then
    cc_version="`$CC $CFLAGS -V 2>&1 |grep '^pgcc '`"
    if test X != "X$cc_version"; then
        is_mpi="`$CC $CFLAGS -help 2>&1 |grep 'MPI'`"
        cc_vendor=`echo $cc_version |sed 's/\([a-z]*\).*/\1/'`
        cc_version=`echo $cc_version |sed 's/pgcc \([-a-z0-9\.\-]*\).*/\1/'`
        echo "compiler '$CC' is PGI $cc_vendor-$cc_version"

        # Some version numbers
        # PGI version numbers are of the form: "major.minor-patch"
        cc_vers_major=`echo $cc_version | cut -f1 -d.`
        cc_vers_minor=`echo $cc_version | cut -f2 -d. | cut -f1 -d-`
        cc_vers_patch=`echo $cc_version | cut -f2 -d. | cut -f2 -d-`
        test -n "$cc_vers_major" || cc_vers_major=0
        test -n "$cc_vers_minor" || cc_vers_minor=0
        test -n "$cc_vers_patch" || cc_vers_patch=0
        cc_vers_all=`expr $cc_vers_major '*' 1000000 + $cc_vers_minor '*' 1000 + $cc_vers_patch`
    fi
fi

# Common PGI flags for various situations
if test "X-pgcc" = "X-$cc_vendor"; then
    # Insert section about version specific problems from gnu-flags here, if
    # necessary.

    arch=
    # Architecture-specific flags
    # Nothing currently. (Uncomment code below and modify to add any)
    #case "$host_os-$host_cpu" in
    #    *-i686)
    #        arch="-march=i686"
    #        ;;
    #esac

    # Host-specific flags
    # Nothing currently. (Uncomment code below and modify to add any)
    #case "`hostname`" in
    #    sleipnir.ncsa.uiuc.edu)
    #        arch="$arch -pipe"
    #        ;;
    #esac

    # General
    H5_CFLAGS="$H5_CFLAGS $arch -c99 -Minform=inform"

    # Production
    case "$cc_vendor-$cc_version" in
      pgcc-10.6*)
        PROD_CFLAGS=
        ;;
      pgcc-9.*)
        PROD_CFLAGS=
        ;;
      *)
        PROD_CFLAGS="-fast"
        ;;
    esac

    # Debug
    # NDEBUG is handled explicitly by the configure script
    DEBUG_CFLAGS="-Mbounds"

    # Symbols
    SYMBOLS_CFLAGS="-g"
    NO_SYMBOLS_CFLAGS="-s"

    # Profiling
    PROFILE_CFLAGS="-Mprof=func,line"
    # Use this for profiling with gprof
    #PROFILE_CFLAGS="-pg"

    # Optimization
    case "$cc_vendor-$cc_version" in
      # Tweak down compiler optimizations for v10.6, it has a bug
      pgcc-10.6*)
        HIGH_OPT_CFLAGS="-O1"
        ;;
      # Tweak down compiler optimizations for v9.x
      pgcc-9.*)
        HIGH_OPT_CFLAGS="-O1"
        ;;
      *)
        HIGH_OPT_CFLAGS=
        ;;
    esac
    DEBUG_OPT_CFLAGS=
    NO_OPT_CFLAGS=

    # Flags are set
    cc_flags_set=yes
fi

# Clear cc info if no flags set
if test "X-$cc_flags_set" = "X-"; then
  cc_vendor=
  cc_version=
fi
