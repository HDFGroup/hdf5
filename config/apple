#							-*- shell-script -*-
#
# Copyright by The HDF Group.
# Copyright by the Board of Trustees of the University of Illinois.
# All rights reserved.
#
# This file is part of HDF5.  The full HDF5 copyright notice, including
# terms governing use, modification, and redistribution, is contained in
# the COPYING file, which can be found at the root of the source code
# distribution tree, or in https://www.hdfgroup.org/licenses.
# If you do not have access to either file, you may request a copy from
# help@hdfgroup.org.


# This file is part of the HDF5 build script.  It is processed shortly
# after configure starts and defines, among other things, flags for
# the various compile modes.
#
# See BlankForm in this directory for details.

# The default compiler is `clang'.
# No support for OS older than darwin 10.X.
if test "X-" = "X-$CC"; then
    case "$host_os" in
	darwin10.*)	# Snow Leopard. Use gcc/g++ because clang++ is not available.
	    CC=gcc
	    CC_BASENAME=gcc
	    ;;
	*)
	    CC=clang
	    CC_BASENAME=clang

	    # Production
	    PROD_CFLAGS="-O3" 
	    PROD_CPPFLAGS=

	    # Debug
	    DEBUG_CFLAGS="-g -O0"
	    DEBUG_CPPFLAGS=

	    # Profile
	    # Use this for profiling with gprof
	    # Just "-g" for now. More later.
	    PROFILE_CFLAGS="-g"
	    PROFILE_CPPFLAGS=
	    ;;
    esac
fi

# Figure out compiler flags
. $srcdir/config/gnu-flags
. $srcdir/config/clang-flags
# temp patch: if GCC 4.2.1 is used in Lion or Mountain Lion systems, do not
# use -O option as it causes failures in test/dt_arith.
case "$host_os" in
    darwin1[12].*)   # lion & mountain lion
	#echo cc_vendor=$cc_vendor'-'cc_version=$cc_version
	case "$cc_vendor-$cc_version" in
	    gcc-4.2.1)
		# Remove any -O flags
		#echo PROD_CFLAGS=$PROD_CFLAGS
		PROD_CFLAGS="`echo $PROD_CFLAGS | sed -e 's/-O[0-3]*//'`"
		#echo new PROD_CFLAGS=$PROD_CFLAGS
		;;
	esac
	;;
esac
 
. $srcdir/config/intel-flags
if test "X-" = "X-$FC"; then
    case $CC_BASENAME in
        clang)
	    # clang has no fortran compiler. Use gfortran.
            FC=gfortran
            FC_BASENAME=gfortran
            ;;
        gcc*)
            FC=gfortran
            FC_BASENAME=gfortran
            ;;
        icc*)
            FC=ifort
            FC_BASENAME=ifort
            ;;
    esac
fi

if test "X-" = "X-$CXX"; then
    case $CC_BASENAME in
        clang)
            CXX=clang++
            CXX_BASENAME=clang++
            ;;
        gcc)
            CXX=g++
            CXX_BASENAME=g++
            ;;
        icc)
            CXX=icpc
            CXX_BASENAME=icpc
            ;;
    esac
fi

case $CXX_BASENAME in
    clang++)
	PROD_CXXFLAGS="-O3"
	DEBUG_CXXFLAGS="-g -O0"
	# Use this for profiling with gprof
	# Just "-g" for now. More later.
	PROFILE_CXXFLAGS="-g"
	;;
esac

# compiler version strings
case $CC in
    clang)
        cc_version_info=`$CC $CFLAGS $H5_CFLAGS --version 2>&1 |\
            grep 'Apple' | sed 's/(.*//'`
        ;;

    *gcc*)
        cc_version_info=`$CC $CFLAGS $H5_CFLAGS --version 2>&1 | grep -v 'PathScale' |\
            grep 'GCC' | sed 's/.*\((GCC) [-a-z0-9\. ]*.*\)/\1/'`
        ;;

    *icc*)
        cc_version_info=`$CC $CCFLAGS $H5_CCFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;

    *)
        echo "No match to get cc_version_info for $CC"
        ;;
esac
# Figure out Fortran compiler flags and version strings
case $FC in
    *gfortran*)
        . $srcdir/config/gnu-fflags
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS --version 2>&1 |\
            grep 'GCC' | sed 's/\(.*(GCC) [-a-z0-9\. ]*\).*/\1/'`
        ;;

    *ifc*|*ifort*)
        . $srcdir/config/intel-fflags
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;

     *)
        echo "No match to get fc_version_info and flags for $FC"
        ;;

esac

# get c++ version info
case $CXX in
    clang++)
        . $srcdir/config/clang-cxxflags
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS --version 2>&1 |\
            grep 'Apple' | sed 's/(.*//'`
        ;;

    *g++*)
        . $srcdir/config/gnu-cxxflags
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS --version 2>&1 |\
            grep 'GCC' | sed 's/.*\((GCC) [-a-z0-9\. ]*.*\)/\1/'`
        ;;

   *icpc*)
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;

    *)
        echo "No match to get cxx_version_info for $CXX"
        ;;
esac

