HDF5 version 1.8.23-1 currently under development
================================================================================

INTRODUCTION
============

This document describes the differences between this release and the previous
HDF5 release. It contains information on the platforms tested and known
problems in this release. For more details check the HISTORY*.txt files in the
HDF5 source.

Note that documentation in the links below will be updated at the time of each
final release.

Links to HDF5 documentation can be found on The HDF5 web page:

     https://portal.hdfgroup.org/display/HDF5/HDF5

The official HDF5 releases can be obtained from:

     https://portal.hdfgroup.org/display/support/HDF5+1.8.22

Changes from Release to Release and New Features in the HDF5-1.8.x release series
can be found at:

     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide

If you have any questions or comments, please send them to the HDF Help Desk:

     help@hdfgroup.org


CONTENTS
========

- New Features
- Support for New Platforms, Languages, and Compilers
- Bug Fixes since HDF5-1.8.22
- Supported Platforms
- Supported Configuration Features Summary
- More Tested Platforms
- Known Problems
- CMake vs. Autotools installations


New Features
============

    Configuration:
    -------------
    - None


    Library
    -------
    - None


    Parallel Library
    ----------------
    - None


    Tools
    -----
    - None


    High-Level APIs
    ---------------
    - None


    Fortran API
    -----------
    - None


    C++ API
    -------
    - None


    High-Level APIs
    ---------------
    - None


Support for New Platforms, Languages, and Compilers
===================================================



Bug Fixes since HDF5-1.8.21
===========================

    Configuration
    -------------
    - None


    Library
    -------
    - None


    Performance
    -------------
    - None


    Tools
    -----
    - None


    Fortran API
    -----------
    - None


    C++ API
    -------
    - None


    High-Level APIs:
    ---------------
    - None


    Packet Table APIs:
    ------------------
    - None


Supported Platforms
===================

    Linux 3.10.0-1127.10.1.el7    gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
    (echidna)                     GNU Fortran (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)

    Linux 2.6.32-573.18.1.el6     IBM XL C/C++ V13.1
    #1 SMP ppc64 GNU/Linux        IBM XL Fortran V15.1
    (ostrich)                     

    Linux 3.10.0-327.10.1.el7     GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers:
    (jelly/kituo/moohan)          Version 4.8.5 20150623 (Red Hat 4.8.5-39)
                                     Versions 4.9.3, 5.3.0, 6.3.0, 7.2.0
                                              8.3.0, 9.1.0, 10.1.0
                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)
                                  compilers:
                                     Version 17.0.0.098 Build 20160721
                                  MPICH 3.3 compiled with GCC 7.2.0
                                  OpenMPI 4.0.0 compiled with GCC 7.2.0
                                  NAG Fortran Compiler Release 7.0(Yurakuchho) Build 7011

    SunOS 5.11 11.4.5.12.5.0      Sun C 5.15 SunOS_sparc 2017/05/30
    32- and 64-bit                Studio 12.6 Fortran 95 8.8 SunOS_sparc 2017/05/30
    (hedgehog)                    Sun C++ 5.15 SunOS_sparc 2017/05/30

    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 18 (cmake)
                                  Visual Studio 2017 w/ Intel Fortran 19 (cmake)
                                  Visual Studio 2019 w/ Intel Fortran 19 (cmake)
                                  Visual Studio 2019 w/ MSMPI 10.1 (cmake)



Tested Configuration Features Summary
=====================================

    In the tables below
          y   = tested
          n   = not tested in this release
          C   = Cluster
          W   = Workstation
          x   = not working in this release
          dna = does not apply
          ( ) = footnote appears below second table
          <blank> = testing incomplete on this feature or platform

Platform                              C         F90/   F90      C++  zlib  SZIP
                                      parallel  F2003  parallel
SunOS 5.11 32-bit                       n        y/y    n        y    y     y
SunOS 5.11 64-bit                       n        y/y    n        y    y     y
Windows 10                              y        y/y    n        y    y     y
Windows 10 x64                          y        y/y    n        y    y     y
Mac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y
Mac OS Sierra 10.12.6 64-bit            n        y/y    n        y    y     y
Mac OS X High Sierra 10.13.6 64-bit     n        y/y    n        y    y     y
Mac OS X Mojave 10.14.6 64-bit          n        y/y    n        y    y     y
CentOS 7.2 Linux 2.10.0 x86_64 PGI      n        y/y    n        y    y     y
CentOS 7.1 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y
CentOS 7.1 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y
Linux 2.6.32-573.18.1.el6.ppc64         n        y/n    n        y    y     y

Platform                                 Shared  Shared    Shared    Thread-
                                         C libs  F90 libs  C++ libs  safe
SunOS 5.11 32-bit                          y       y         y         y
SunOS 5.11 64-bit                          y       y         y         y
Windows 10                                 y       y         y         y
Windows 10 x64                             y       y         y         y
Mac OS X El Capitan 10.11.6 64-bit         y       n         y         y
Mac OS Sierra 10.12.6 64-bit               y       n         y         y
Mac OS X High Sierra 10.13.6 64-bit        y       n         y         y
Mac OS X Mojave 10.14.6 64-bit             y       n         y         y
CentOS 7.2 Linux 3.10.0 x86_64 PGI         y       y         y         y
CentOS 7.2 Linux 3.10.0 x86_64 GNU         y       y         y         y
CentOS 7.2 Linux 3.10.0 x86_64 Intel       y       y         y         y
Linux 2.6.32-573.18.1.el6.ppc64            y       y         y         y

Compiler versions for each platform are listed in the preceding
"Supported Platforms" table.


More Tested Platforms
=====================
The following platforms are not supported but have been tested for this release.

    Linux 2.6.32-573.22.1.el6     GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers:
    (platypus)                    Version 4.4.7 20120313
                                     Versions 4.9.3, 5.3.0, 6.2.0
                                  PGI C, Fortran, C++ for 64-bit target on
                                  x86-64;
                                      Version 16.10-0
                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)
                                  compilers:
                                     Version 17.0.0.196 Build 20160721
                                  MPICH 3.1.4 compiled with GCC 4.9.3
                                  OpenMPI 2.0.1 compiled with GCC 4.9.3

    Linux 2.6.32-573.18.1.el6     gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)
    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)
    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)

    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers
    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)
    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)
                                  GCC Version 7.1.0
                                  OpenMPI 2.1.6-GCC-7.2.0-2.29,
                                     3.1.3-GCC-7.2.0-2.29
                                  Intel(R) C (icc) and C++ (icpc) compilers
                                     Version 17.0.0.098 Build 20160721
                                  with NAG Fortran Compiler Release 6.1(Tozai)

    Linux 3.10.0-327.10.1.el7     MPICH 3.1.4 compiled with GCC 4.9.3
    #1 SMP x86_64 GNU/Linux
    (moohan)

    Linux-3.10.0-1127.0.0.1chaos  openmpi-4.0.0
    #1 SMP x86_64 GNU/Linux           clang/3.9.0, 8.0.1
    (quartz)                          gcc/7.3.0, 8.1.0
                                      intel/16.0.4

    Linux-4.14.0-115.10.1.1       spectrum-mpi/rolling-release
    #1 SMP ppc64le GNU/Linux          clang/coral-2018.08.08
    (lassen)                          gcc/7.3.1
                                      xl/2019.02.07

    Linux-4.12.14-150.52-default  cray-mpich/7.7.10
    #1 SMP x86_64 GNU/Linux           gcc/7.3.0, 8.2.0
    (cori)                            intel/19.0.3

    Linux-4.4.180-94.107-default  cray-mpich/7.7.6
    # 1SMP x86_64 GNU/Linux           gcc/7.2.0, 8.2.0
    (mutrino)                         intel/17.0.4, 18.0.2, 19.0.4

    Fedora33 5.10.10-200.fc33.x86_64
    #1 SMP x86_64  GNU/Linux         GNU gcc (GCC) 10.2.1 20201125 (Red Hat 10.2.1-9)
                                     GNU Fortran (GCC) 10.2.1 20201125 (Red Hat 10.2.1-9)
                                     clang version 11.0.0 (Fedora 11.0.0-2.fc33)
                                     (cmake and autotools)

    Ubuntu20.10 5.8.0-41-generic-x86_64
    #46-Ubuntu SMP x86_64  GNU/Linux GNU gcc (GCC) 10.2.0-13ubuntu1
                                     GNU Fortran (GCC) 10.2.0-13ubuntu1
                                     (cmake and autotools)

    SUSE15sp2 5.3.18-22-default
    #1 SMP x86_64  GNU/Linux         GNU gcc (SUSE Linux) 7.5.0
                                     GNU Fortran (SUSE Linux) 7.5.0
                                     clang version 7.0.1 (tags/RELEASE_701/final 349238)
                                     (cmake and autotools)

    Mac OS X El Capitan 10.11.6   Apple LLVM version 7.3.0 (clang-703.0.29)
    64-bit                        gfortran GNU Fortran (GCC) 5.2.0
    (VM osx1011dev/osx1011test)   Intel icc/icpc/ifort version 16.0.2

    Mac OS Sierra 10.12.6         Apple LLVM version 8.1 (clang-802.0.42)
    64-bit                        gfortran GNU Fortran (GCC) 7.4.0
    (kite)                        Intel icc/icpc/ifort version 17.0.2

    SunOS 5.11 11.3               Sun C 5.15 SunOS_sparc
    32- and 64-bit                Sun Fortran 95 8.8 SunOS_sparc
    (emu)

Known Problems
==============
    HDF5-1.8.22 binaries can replace the previous HDF5 version to run with
    applications compiled and linked with HDF5-1.8.21 and possibly HDF5 versions
    as early as 1.8.15.  However, HDF5 checks versions in lib files against
    versions in header files used to compile the application and will cause the
    application to abort when they do not match.  An environment variable
    HDF5_DISABLE_VERSION_CHECK can be set to 2 to skip the check, to 1 to warn
    but not abort, or to 0 for the default behavior, aborting when the HDF5
    version in the lib files does not match the version in the header files.
    LRK - 2020/02/02

    CMake files do not behave correctly with paths containing spaces.
    Do not use spaces in paths because the required escaping for handling spaces
    results in very complex and fragile build files.
    ADB - 2019/05/07

    The dynamically loaded plugin test libraries require undefined references
    to HDF5 functions to be resolved at runtime in order to function properly.
    With autotools on CYGWIN this results in build errors, and we have not
    found a solution that satisfies both.  Therefore the dynamically loaded
    plugin tests have been disabled on CYGWIN.

    Mac OS X 10.13 added additional subdirectory structure in .libs for shared
    libraries.  Consequently "make check" will fail testing java and dynamically
    loaded plugin test libraries attempting to copy files from the previous
    locations in .libs directories.  This will be addressed in the next release
    when support for the Mac OS X 10.13 platform is added.

    CPP ptable test fails on both VS2017 and VS2019 with Intel compiler, JIRA
    issue: HDFFV-10628.  This test will pass with VS2015 with Intel compiler.

    Known problems in previous releases can be found in the HISTORY*.txt files
    in the HDF5 source. Please report any new problems found to
    help@hdfgroup.org.


CMake vs. Autotools installations
=================================
While both build systems produce similar results, there are differences.
Each system produces the same set of folders on linux (only CMake works
on standard Windows); bin, include, lib and share. Autotools places the
COPYING and RELEASE.txt file in the root folder, CMake places them in
the share folder.

The bin folder contains the tools and the build scripts. Additionally, CMake
creates dynamic versions of the tools with the suffix "-shared". Autotools
installs one set of tools depending on the "--enable-shared" configuration
option.
  build scripts
  -------------
  Autotools: h5c++, h5cc, h5fc
  CMake: h5c++, h5cc, h5hlc++, h5hlcc

The include folder holds the header files and the fortran mod files. CMake
places the fortran mod files into separate shared and static subfolders,
while Autotools places one set of mod files into the include folder. Because
CMake produces a tools library, the header files for tools will appear in
the include folder.

The lib folder contains the library files, and CMake adds the pkgconfig
subfolder with the hdf5*.pc files used by the bin/build scripts created by
the CMake build. CMake separates the C interface code from the fortran code by
creating C-stub libraries for each Fortran library. In addition, only CMake
installs the tools library. The names of the szip libraries are different
between the build systems.

The share folder will have the most differences because CMake builds include
a number of CMake specific files for support of CMake's find_package and support
for the HDF5 Examples CMake project.

