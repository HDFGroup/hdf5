HDF5 version 1.8.24-1 currently under development
================================================================================


INTRODUCTION
============

This document describes the differences between this release and the previous
HDF5 release. It contains information on the platforms tested and known
problems in this release. For more details check the HISTORY*.txt files in the
HDF5 source.

Note that documentation in the links below will be updated at the time of each
final release.

Links to HDF5 documentation can be found on The HDF5 web page:

     https://portal.hdfgroup.org/display/HDF5/HDF5

The official HDF5 releases can be obtained from:

     https://www.hdfgroup.org/downloads/hdf5/

Changes from Release to Release and New Features in the HDF5-1.8.x release series
can be found at:

     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide

If you have any questions or comments, please send them to the HDF Help Desk:

     help@hdfgroup.org


CONTENTS
========

- New Features
- Support for New Platforms and Languages
- Bug Fixes since HDF5-1.8.23
- Supported Platforms
- Supported Configuration Features Summary
- More Tested Platforms
- Known Problems
- CMake vs. Autotools installations


New Features
============

    Configuration:
    -------------
    -


    Library:
    --------
    - 


    Fortran Library:
    ----------------
    -


    Tools:
    ------
    -


Bug Fixes since HDF5-1.8.23
===========================

    Configuration
    -------------
    -


    Library
    -------
    -


    Fortran Library:
    ----------------
    -


    Tools
    -----
    -


    Packet Table APIs:
    ------------------
    -


Support for New Platforms and Languages
=======================================


Platforms Tested
================

    Linux 5.15.0-1026-aws             gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    #30-Ubuntu SMP x86_64 GNU/Linux   GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    Ubuntu 22.04                      Ubuntu clang version 14.0.0-1ubuntu1
                                      (cmake and autotools)

    Linux 5.13.0-1031-aws             GNU gcc (GCC) 9.4.0-1ubuntu1
    #35-Ubuntu SMP x86_64 GNU/Linux   GNU Fortran (GCC) 9.4.0-1ubuntu1
    Ubuntu 20.04                      clang version 10.0.0-4ubuntu1
                                      (cmake and autotools)

    Linux 4.18.0-348.7.1.el8_5        gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-4)
    #1 SMP x86_64 GNU/Linux           GNU Fortran (GCC) 8.5.0 20210514 (Red Hat 8.5.0-4)
    CentOS8                           clang version 12.0.1 (Red Hat 12.0.1)
                                      (cmake and autotools)

    Linux-4.14.0-115.21.2             spectrum-mpi/rolling-release
    #1 SMP ppc64le GNU/Linux              clang 12.0.1, 14.0.5
    (lassen)                              GCC 8.3.1
                                          XL 16.1.1.2, 2021.09.22, 2022.08.05
                                      (cmake)

    Linux 3.10.0-1160.36.2.el7.ppc64  gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
    #1 SMP ppc64 GNU/Linux            g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
    (echidna)                         GNU Fortran (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
                                      IBM XL C/C++ V13.1
                                      IBM XL Fortran V15.1

    Linux 3.10.0-327.10.1.el7     GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers:
    (jelly/kituo/moohan)          Version 4.8.5 20150623 (Red Hat 4.8.5-39)
                                     Versions 4.9.3, 5.3.0, 6.3.0, 7.2.0
                                              8.3.0, 9.1.0, 10.1.0
                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)
                                  compilers:
                                     Version 17.0.0.098 Build 20160721
                                  MPICH 3.1.4 built with GCC 4.9.3, 3.3 built with GCC 7.2.0
                                  OpenMPI 3.1.3, 4.0.0 compiled with GCC 7.2.0
                                  NAG Fortran Compiler Release 7.0(Yurakuchho) Build 7011
                                  PGI C, Fortran, C++ for 64-bit target on
                                      x86_64;
                                         Version 19.10-0
                                      (autotools and cmake)

    Linux-3.10.0-1160.0.0.1chaos  openmpi-4.1.2
    #1 SMP x86_64 GNU/Linux           clang 6.0.0, 11.0.1
    (quartz)                          GCC 7.3.0, 8.1.0
                                      Intel 19.0.4, 2022.2, oneapi.2022.2

    Linux-3.10.0-1160.59.1.1chaos     openmpi/4.1
    #1 SMP x86_64 GNU/Linux              Intel/19.1, 21.3.0, 22.2.0
    (chama)                           (cmake)

    macOS Apple M1 11.6               Apple clang version 12.0.5 (clang-1205.0.22.11)
    Darwin 20.6.0 arm64               gfortran GNU Fortran (Homebrew GCC 11.2.0) 11.1.0
    (macmini-m1)                      Intel icc/icpc/ifort version 2021.3.0 202106092021.3.0 20210609

    macOS Big Sur 11.3.1              Apple clang version 12.0.5 (clang-1205.0.22.9)
    Darwin 20.4.0 x86_64              gfortran GNU Fortran (Homebrew GCC 10.2.0_3) 10.2.0
    (bigsur-1)                        Intel icc/icpc/ifort version 2021.2.0 20210228

    macOS High Sierra 10.13.6         Apple LLVM version 10.0.0 (clang-1000.10.44.4)
    64-bit                            gfortran GNU Fortran (GCC) 6.3.0
    (bear)                            Intel icc/icpc/ifort version 19.0.4.233 20190416

    macOS Sierra 10.12.6              Apple LLVM version 9.0.0 (clang-900.39.2)
    64-bit                            gfortran GNU Fortran (GCC) 7.4.0
    (kite)                            Intel icc/icpc/ifort version 17.0.2

    Mac OS X El Capitan 10.11.6       Apple clang version 7.3.0 from Xcode 7.3
    64-bit                            gfortran GNU Fortran (GCC) 5.2.0
    (osx1011test)                     Intel icc/icpc/ifort version 16.0.2

    Linux 2.6.32-573.22.1.el6     GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers:
    (platypus)                    Version 4.4.7 20120313
                                     Versions 4.9.3, 5.3.0, 6.2.0
                                  MPICH 3.1.4 compiled with GCC 4.9.3
                                  PGI C, Fortran, C++ for 64-bit target on
                                  x86-64;
                                      Version 19.10-0

    Windows 10 x64                Visual Studio 2015 w/ Intel C/C++/Fortran 18 (cmake)
                                  Visual Studio 2017 w/ Intel C/C++/Fortran 19 (cmake)
                                  Visual Studio 2019 w/ clang 12.0.0
                                      with MSVC-like command-line (C/C++ only - cmake)
                                  Visual Studio 2019 w/ Intel C/C++/Fortran oneAPI 2022 (cmake)
                                  Visual Studio 2022 w/ clang 15.0.1
                                      with MSVC-like command-line (C/C++ only - cmake)
                                  Visual Studio 2022 w/ Intel C/C++/Fortran oneAPI 2022 (cmake)
                                  Visual Studio 2019 w/ MSMPI 10.1 (C only - cmake)


Known Problems
==============
    CMake files do not behave correctly with paths containing spaces.
    Do not use spaces in paths because the required escaping for handling spaces
    results in very complex and fragile build files.
    ADB - 2019/05/07

    The dynamically loaded plugin test libraries require undefined references
    to HDF5 functions to be resolved at runtime in order to function properly.
    With autotools on CYGWIN this results in build errors, and we have not
    found a solution that satisfies both.  Therefore the dynamically loaded
    plugin tests have been disabled on CYGWIN.

    CPP ptable test fails on both VS2017 and VS2019 with Intel compiler, JIRA
    issue: HDFFV-10628.  This test will pass with VS2015 with Intel compiler.

    The subsetting option in ph5diff currently will fail and should be avoided.
    The subsetting option works correctly in serial h5diff.

    Known problems in previous releases can be found in the HISTORY*.txt files
    in the HDF5 source. Please report any new problems found to
    help@hdfgroup.org.


CMake vs. Autotools installations
=================================
While both build systems produce similar results, there are differences.
Each system produces the same set of folders on linux (only CMake works
on standard Windows); bin, include, lib and share. Autotools places the
COPYING and RELEASE.txt file in the root folder, CMake places them in
the share folder.

The bin folder contains the tools and the build scripts. Additionally, CMake
creates dynamic versions of the tools with the suffix "-shared". Autotools
installs one set of tools depending on the "--enable-shared" configuration
option.
  build scripts
  -------------
  Autotools: h5c++, h5cc, h5fc
  CMake: h5c++, h5cc, h5hlc++, h5hlcc

The include folder holds the header files and the fortran mod files. CMake
places the fortran mod files into separate shared and static subfolders,
while Autotools places one set of mod files into the include folder. Because
CMake produces a tools library, the header files for tools will appear in
the include folder.

The lib folder contains the library files, and CMake adds the pkgconfig
subfolder with the hdf5*.pc files used by the bin/build scripts created by
the CMake build. CMake separates the C interface code from the fortran code by
creating C-stub libraries for each Fortran library. In addition, only CMake
installs the tools library. The names of the szip libraries are different
between the build systems.

The share folder will have the most differences because CMake builds include
a number of CMake specific files for support of CMake's find_package and support
for the HDF5 Examples CMake project.

