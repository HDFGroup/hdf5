
***********************************************************************
*  HDF5 Build and Install Suggestions for Windows and Visual Studio   *
*                         (Full Version)                              *
***********************************************************************

These suggestions are for Visual Studio users.

Instructions for building and testing HDF5 applications using CMake can
be found in the USING_HDF5_CMake.txt file found in this folder.

NOTE: Building applications with the dynamic/shared hdf5 libraries requires
      that the "H5_BUILT_AS_DYNAMIC_LIB" compile definition be used.

The following two sections are helpful if you do not use CMake to build
your applications. Consult the Microsoft documentation for your product
for more information.

==============================================================================================
Using Visual Studio 2010 and above with HDF5 Libraries built with Visual Studio 2010 and above
==============================================================================================

   1. Set up path for external libraries and headers

      The path settings will need to be in the project property sheets per project.
      Go to "Project" and select "Properties", find "Configuration Properties",
      and then "VC++ Directories".

      1.1 If you are building on 64-bit Windows, find the "Platform" dropdown
          and select "x64".

      1.2 Add the header path to the "Include Directories" setting.

      1.3 Add the library path to the "Library Directories" setting.

      1.4 Select Linker->Input and beginning with the
          "Additional Dependencies" line, enter the library names. The
          external libraries should be listed first, followed by the HDF5
          library, and then optionally the HDF5 High Level, Fortran or C++
          libraries. For example, to compile a C++ application, enter:

          szip.lib zlib.lib hdf5.lib hdf5_cpp.lib


==========================================================================
Using Visual Studio 2008 with HDF5 Libraries built with Visual Studio 2008
==========================================================================

   2. Set up the path for external libraries and headers

      Invoke Microsoft Visual Studio and go to "Tools" and select "Options",
      find "Projects", and then "VC++ Directories".

      2.1 If you are building on 64-bit Windows, find the "Platform" dropdown
          and select "x64".

      2.2 Find the box "Show directories for", choose "Include files", add the
          header path (i.e. c:\Program Files\HDF_Group\HDF5\1.8.x\include)
          to the included directories.

      2.3 Find the box "Show directories for", choose "Library files", add the
          library path (i.e. c:\Program Files\HDF_Group\HDF5\1.8.x\lib)
          to the library directories.

      2.4 If using Fortran libraries, you will also need to setup the path
          for the Intel Fortran compiler.

      2.5 Select Project->Properties->Linker->Input and beginning with the
          "Additional Dependencies" line, enter the library names. The
          external libraries should be listed first, followed by the HDF5
          library, and then optionally the HDF5 High Level, Fortran or C++
          libraries. For example, to compile a C++ application, enter:

          szip.lib zlib.lib hdf5.lib hdf5_cpp.lib

========================================================================
3. Helpful Pointers
========================================================================

    3.1 FAQ

    Many other common questions and hints are located online and being updated
    in the HDF Knowledge Base, please see:

       https://portal.hdfgroup.org/display/knowledge/HDF+Knowledge+Base

************************************************************************
 Please send email to help@hdfgroup.org for further assistance.
