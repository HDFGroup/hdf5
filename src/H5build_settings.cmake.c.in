/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright by The HDF Group.                                               *
 * All rights reserved.                                                      *
 *                                                                           *
 * This file is part of HDF5.  The full HDF5 copyright notice, including     *
 * terms governing use, modification, and redistribution, is contained in    *
 * the COPYING file, which can be found at the root of the source code       *
 * distribution tree, or in https://www.hdfgroup.org/licenses.               *
 * If you do not have access to either file, you may request a copy from     *
 * help@hdfgroup.org.                                                        *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#include "H5private.h"

H5_GCC_DIAG_OFF("larger-than=")
H5_CLANG_DIAG_OFF("overlength-strings")

const char H5build_settings[]=
	"	    SUMMARY OF THE HDF5 CONFIGURATION\n"
	"	    =================================\n"
	"\n"
	"General Information:\n"
	"-------------------\n"
	"                   HDF5 Version: @H5_VERSION@\n"
	"                  Configured on: @CONFIG_DATE@\n"
	"                  Configured by: @CONFIG_USER@\n"
	"                    Host system: @host_cpu@-@host_vendor@-@host_os@\n"
	"              Uname information: @UNAME_INFO@\n"
	"                       Byte sex: @BYTESEX@\n"
	"             Installation point: @prefix@\n"
	"\n"
	"Compiling Options:\n"
	"------------------\n"
	"                     Build Mode: @BUILD_MODE@\n"
	"              Debugging Symbols: @SYMBOLS@\n"
	"                        Asserts: @ASSERTS@\n"
	"                      Profiling: @PROFILING@\n"
	"             Optimization Level: @OPTIMIZATION@\n"
	"\n"
	"Linking Options:\n"
	"----------------\n"
	"                      Libraries: \n"
	"  Statically Linked Executables: \n"
	"                        LDFLAGS: \n"
	"                     H5_LDFLAGS: \n"
	"                     AM_LDFLAGS: \n"
	"                Extra libraries: \n"
	"                       Archiver: \n"
	"                       AR_FLAGS: \n"
	"                         Ranlib: \n"
	"\n"
	"Languages:\n"
	"----------\n"
	"                              C: \n"
	"                     C Compiler: \n"
	"                       CPPFLAGS: \n"
	"                    H5_CPPFLAGS: \n"
	"                    AM_CPPFLAGS: \n"
	"                        C Flags: \n"
	"                     H5 C Flags: \n"
	"                     AM C Flags: \n"
	"               Shared C Library: yes\n"
	"               Static C Library: yes\n"
	"\n"
	"\n"
	"                        Fortran: no\n"
	"\n"
	"                            C++: no\n"
	"\n"
	"                           Java: no\n"
	"\n"
	"\n"
	"Features:\n"
	"---------\n"
	"                     Parallel HDF5: no\n"
	"  Parallel Filtered Dataset Writes: no\n"
	"                Large Parallel I/O: no\n"
	"                High-level library: yes\n"
	"Dimension scales w/ new references: no\n"
	"                  Build HDF5 Tests: yes\n"
	"                  Build HDF5 Tools: yes\n"
	"                   Build GIF Tools: no\n"
	"                      Threadsafety: no\n"
	"               Default API mapping: v116\n"
	"    With deprecated public symbols: yes\n"
	"            I/O filters (external): deflate(zlib)\n"
	"                     Map (H5M) API: no\n"
	"                        Direct VFD: no\n"
	"                        Mirror VFD: no\n"
	"                     Subfiling VFD: no\n"
	"                (Read-Only) S3 VFD: no\n"
	"              (Read-Only) HDFS VFD: no\n"
	"    Packages w/ extra debug output: AC,B2,CX,D,F,HL,I,O,S,T,Z\n"
	"                       API tracing: yes\n"
	"              Using memory checker: no\n"
	"            Function stack tracing: no\n"
	"                  Use file locking: best-effort\n"
	"         Strict file format checks: yes\n"
	"      Optimization instrumentation: no\n"
;

H5_GCC_DIAG_ON("larger-than=")
H5_CLANG_DIAG_OFF("overlength-strings")
