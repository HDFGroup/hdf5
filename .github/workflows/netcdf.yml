name: netCDF dev

# Triggers the workflow on push or pull request or on demand
on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ develop ]
    paths-ignore:
      - '.github/CODEOWNERS'
      - '.github/FUNDING.yml'
      - 'doc/**'
      - 'release_docs/**'
      - 'ACKNOWLEDGEMENTS'
      - 'LICENSE**'
      - '**.md'

permissions:
  contents: read

# Using concurrency to cancel any in-progress job or run
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install System dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build
        sudo apt install libssl3 libssl-dev libcurl4
        sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev doxygen openssl libtool libtool-bin

    - name: Checkout HDF5
      uses: actions/checkout@v4.1.7

    - name: CMake Configure
      run: |
          mkdir "${{ runner.workspace }}/build"
          cd "${{ runner.workspace }}/build"
          cmake -C $GITHUB_WORKSPACE/config/cmake/cacheinit.cmake \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DONLY_SHARED_LIBS=ON \
            -DHDF5_ENABLE_PARALLEL:BOOL=OFF \
            -DHDF5_BUILD_CPP_LIB:BOOL=OFF \
            -DHDF5_BUILD_FORTRAN=OFF \
            -DHDF5_BUILD_JAVA=OFF \
            -DHDF5_BUILD_DOC=OFF \
            -DLIBAEC_USE_LOCALCONTENT=OFF \
            -DZLIB_USE_LOCALCONTENT=OFF \
            -DH5_NO_DEPRECATED_SYMBOLS:BOOL=OFF \
            -DBUILD_TESTING:BOOL=OFF \
            -DCMAKE_INSTALL_PREFIX:PATH=/usr/local \
            $GITHUB_WORKSPACE
      shell: bash

    - name: CMake Build
      run: cmake --build . --parallel 3 --config Release
      working-directory: ${{ runner.workspace }}/build

    - name: Install HDF5
      run: |
        sudo cmake --install . --config Release --prefix="/usr/local"
      working-directory: ${{ runner.workspace }}/build

    - name: Checkout netCDF
      uses: actions/checkout@v4.1.7
      with:
        repository: unidata/netcdf-c
        path: netcdf-c

    - name: Test netCDF
      run: |
        cd netcdf-c
        autoreconf -if
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ./configure --enable-hdf5 --enable-dap --disable-dap-remote-tests --enable-external-server-tests
        cat config.log
        cat libnetcdf.settings
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make -j
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check TESTS="" -j
        LD_LIBRARY_PATH="/home/runner/work/hdf5/hdf5/netcdf-c/liblib/.libs:/usr/local/lib:${LD_LIBRARY_PATH}"
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check -j
