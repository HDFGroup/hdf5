name: hdf5 TestExpress CI

# Run TestExpress CI daily at 04:00 CDT (9:00 UTC)
on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * *"

permissions:
  contents: read

jobs:
  build_and_test:
    strategy:
      matrix:
        build_sys: ["CMake"]
        build_mode: ["Release", "Debug"]
        include:
          - build_sys: "CMake"
            build_mode: "Release"
          - build_sys: "CMake"
            build_mode: "Debug"
#        build_sys: ["CMake", "Autotools"]
#        build_mode: ["Release", "production", "Debug", "debug"]
#        include:
#          - build_sys: "CMake"
#            build_mode: "Release"
#          - build_sys: "CMake"
#            build_mode: "Debug"
#          - build_sys: "Autotools"
#            build_mode: "production"
#          - build_sys: "Autotools"
#            build_mode: "debug"
#        # Exclude mismatched configurations
#        exclude:
#          - build_sys: "CMake"
#            build_mode: "production"
#          - build_sys: "CMake"
#            build_mode: "debug"
#          - build_sys: "Autotools"
#            build_mode: "Release"
#          - build_sys: "Autotools"
#            build_mode: "Debug"

    # Sets the job's name from the properties
    name: "${{ matrix.build_sys }} ${{ matrix.build_mode }} Workflows"

    # Don't run the action if the commit message says to skip CI
    if: "!contains(github.event.head_commit.message, 'skip-ci')"

    runs-on: ubuntu-latest
    steps:
      - name: Install Linux Dependencies
        run: |
           sudo apt update
           sudo apt-get install ninja-build doxygen graphviz
           sudo apt install libssl3 libssl-dev libcurl4 libcurl4-openssl-dev
           sudo apt install gcc-12 g++-12 gfortran-12
           echo "CC=gcc-12" >> $GITHUB_ENV
           echo "CXX=g++-12" >> $GITHUB_ENV
           echo "FC=gfortran-12" >> $GITHUB_ENV

      - name: Install Autotools Dependencies (Linux)
        run: |
           sudo apt install automake autoconf libtool libtool-bin
           sudo apt install libaec0 libaec-dev
        if: ${{ matrix.build_sys == 'Autotools' }}

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Sources
        uses: actions/checkout@v4.1.1

        ##########   CMake  ###########
      - name: CMake Configure
        shell: bash
        run: |
           mkdir "${{ runner.workspace }}/build"
           cd "${{ runner.workspace }}/build"
           cmake -C $GITHUB_WORKSPACE/config/cmake/cacheinit.cmake \
                -G Ninja \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_mode }} \
                -DBUILD_SHARED_LIBS=ON \
                -DHDF5_ENABLE_ALL_WARNINGS=ON \
                -DHDF5_ENABLE_PARALLEL:BOOL=OFF \
                -DHDF5_BUILD_CPP_LIB:BOOL=OFF \
                -DHDF5_BUILD_FORTRAN=OFF \
                -DHDF5_BUILD_JAVA=OFF \
                -DHDF5_BUILD_DOC=OFF \
                -DLIBAEC_USE_LOCALCONTENT=OFF \
                -DZLIB_USE_LOCALCONTENT=OFF \
                -DHDF_TEST_EXPRESS=0 \
                $GITHUB_WORKSPACE
        if: ${{ matrix.build_sys == 'CMake' }}

      - name: CMake Build
        run: cmake --build . --parallel 3 --config ${{ matrix.build_mode }}
        working-directory: ${{ runner.workspace }}/build
        if: ${{ matrix.build_sys == 'CMake' }}

      - name: CMake Run Tests
        run: ctest . --parallel 2 -C ${{ matrix.build_mode }} -V -R H5TESTXPR
        working-directory: ${{ runner.workspace }}/build
        if: ${{ matrix.build_sys == 'CMake' }}

        ##########   autotools  ###########
      - name: Autotools Configure
        shell: bash
        run: |
           sh ./autogen.sh
           mkdir "${{ runner.workspace }}/build"
           cd "${{ runner.workspace }}/build"
           $GITHUB_WORKSPACE/configure \
                --enable-build-mode=${{ matrix.build_mode }} \
                --enable-shared \
                --disable-parallel \
                --disable-cxx \
                --disable-fortran \
                --disable-java \
                --with-szlib=yes
        if: ${{ matrix.build_sys == 'Autotools' }}

      - name: Autotools Build
        shell: bash
        run:         |
           make -j3
        working-directory: ${{ runner.workspace }}/build
        if: ${{ matrix.build_sys == 'Autotools' }}

      - name: Autotools Test
        shell: bash
        run: |
           cd test
           make -j3 check
        working-directory: ${{ runner.workspace }}/build
        if: ${{ matrix.build_sys == 'Autotools' }}
