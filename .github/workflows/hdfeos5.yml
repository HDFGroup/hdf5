name: hdfeos5 dev

# Triggers the workflow on push or pull request or on demand
on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ develop ]
    paths-ignore:
      - '.github/CODEOWNERS'
      - '.github/FUNDING.yml'
      - 'doc/**'
      - 'release_docs/**'
      - 'ACKNOWLEDGEMENTS'
      - 'LICENSE**'
      - '**.md'

permissions:
  contents: read

# Using concurrency to cancel any in-progress job or run
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build hdfeos5
    runs-on: ubuntu-latest
    steps:
      - name: Install System dependencies
        run: |
            sudo apt-get update
            sudo apt-get install ninja-build
            sudo apt install libssl3 libssl-dev libcurl4
            sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev doxygen openssl libtool libtool-bin

      - name: Checkout HDF5
        uses: actions/checkout@v4.1.7

      - name: CMake Configure
        run: |
            mkdir "${{ runner.workspace }}/build"
            cd "${{ runner.workspace }}/build"
            cmake -C $GITHUB_WORKSPACE/config/cmake/cacheinit.cmake \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Release \
              -DHDF5_ENABLE_PARALLEL:BOOL=OFF \
              -DHDF5_BUILD_CPP_LIB:BOOL=OFF \
              -DHDF5_BUILD_FORTRAN=OFF \
              -DHDF5_BUILD_JAVA=OFF \
              -DHDF5_BUILD_DOC=OFF \
              -DLIBAEC_USE_LOCALCONTENT=OFF \
              -DZLIB_USE_LOCALCONTENT=OFF \
              -DH5_NO_DEPRECATED_SYMBOLS:BOOL=OFF \
              -DBUILD_TESTING:BOOL=OFF \
              -DDEFAULT_API_VERSION:STRING=v16 \
              -DCMAKE_INSTALL_PREFIX:PATH=/usr/local \
              $GITHUB_WORKSPACE
        shell: bash

      - name: CMake Build
        run: cmake --build . --parallel 3 --config Release
        working-directory: ${{ runner.workspace }}/build

      - name: Install HDF5
        run: |
          sudo cmake --install . --config Release --prefix="/usr/local"
        working-directory: ${{ runner.workspace }}/build

      - name: Install HDF-EOS5
        run: |
          wget -O HDF-EOS5.2.0.tar.gz "https://git.earthdata.nasa.gov/projects/DAS/repos/hdfeos5/raw/hdf-eos5-2.0-src.tar.gz?at=refs%2Fheads%2FHDFEOS5_2.0"
          tar zxvf HDF-EOS5.2.0.tar.gz
          cd hdf-eos5-2.0
          ./configure CC=/usr/local/bin/h5cc --prefix=/usr/local/ --enable-install-include
          make
          LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"
          LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check
          sudo make install
